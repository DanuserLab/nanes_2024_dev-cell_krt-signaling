function RGB = bnRGBify(I, varargin)
%bnRGBify - Turn a matrix into an 8-bit RGB image
%
% Syntax: RGB = bnRGBify(I, varargin)
%               bnRGBify(__, 'lim', [0 255])
%               bnRGBify(__, 'rel', [0 1])
%               bnRGBify(__, 'colormap', parula)
%               bnRGBify(__, 'colormap', 'r')
%               bnRGBify(__, 'gradient', [0 128 255])
%
% TODO
    ip = inputParser;
    addParameter(ip, 'lim', []);
    addParameter(ip, 'rel', [0.005 0.995]);
    addParameter(ip, 'colormap', gray);
    addParameter(ip, 'gradient', -1);
    parse(ip, varargin{:});

    if(isempty(ip.Results.lim))
        iMin = quantile(I, ip.Results.rel(1), 'all');
        iMax = quantile(I, ip.Results.rel(2), 'all');
    else
        iMin = ip.Results.lim(1);
        iMax = ip.Results.lim(2);
    end
    
    grad = ip.Results.gradient;
    cmap = ip.Results.colormap;

    if(ischar(cmap) | isstring(cmap))
        if(ischar(cmap)), cmap = string(cmap); end
        % some colormaps we can define by name for simplicity
        if(matches(cmap,"R",'IgnoreCase',true)) % reds
            cmap = [0:255; repmat(0,1,256); repmat(0,1,256)]'./255;
        elseif(matches(cmap,"G",'IgnoreCase',true)) % greens
            cmap = [repmat(0,1,256); 0:255; repmat(0,1,256)]'./255;
        elseif(matches(cmap,"B",'IgnoreCase',true)) % blues
            cmap = [repmat(0,1,256); repmat(0,1,256); 0:255]'./255;
        elseif(matches(cmap,"M",'IgnoreCase',true)) % magentas
            cmap = [0:255; repmat(0,1,256); 0:255]'./255;
        elseif(matches(cmap,"RedHot",'IgnoreCase',true)) % 
            cmap = lutRedHot();
        elseif(matches(cmap,"GreenHot",'IgnoreCase',true)) % 
            cmap = lutGreenHot();
        elseif(matches(cmap,"inferno",'IgnoreCase',true)) % 
            cmap = lutInferno();
        elseif(matches(cmap,"Viridis",'IgnoreCase',true)) %
            cmap = lutViridis();
        end
    end
    
    if length(grad) == 3
        cmap = [(0:255).*grad(1); (0:255).*grad(2); (0:255).*grad(3)]'./255./255;
    end

    iRange = iMax - iMin;
    I = uint8((double(I - iMin)) ./ double(iRange) .* 255);
    RGB = im2uint8(ind2rgb(I, cmap));

end

function cmap = lutRedHot()
    cmap = [ 0 0 0;  0 0 0;  0 0 0;  0 0 0;  1 1 1;  1 1 1;  1 1 1;  1 1 1;  1 1 1;  4 0 0;  7 0 0;  10 0 0;  13 0 0;  16 0 0;  20 0 0;  23 0 0;  27 0 0;  30 0 0;  33 0 0;  36 0 0;  39 0 0;  42 0 0;  45 0 0;  48 0 0;  52 0 0;  55 0 0;  58 0 0;  61 0 0;  65 0 0;  68 0 0;  71 0 0;  74 0 0;  78 0 0;  81 0 0;  84 0 0;  87 0 0;  90 0 0;  93 0 0;  96 0 0;  99 0 0;  103 0 0;  106 0 0;  110 0 0;  113 0 0;  117 0 0;  120 0 0;  123 0 0;  126 0 0;  130 0 0;  133 0 0;  136 0 0;  139 0 0;  142 0 0;  145 0 0;  148 0 0;  151 0 0;  155 0 0;  158 0 0;  161 0 0;  164 0 0;  168 0 0;  171 0 0;  174 0 0;  177 0 0;  181 0 0;  184 0 0;  187 0 0;  190 0 0;  193 0 0;  196 0 0;  200 0 0;  203 0 0;  207 0 0;  210 0 0;  213 0 0;  216 0 0;  220 0 0;  223 0 0;  226 0 0;  229 0 0;  233 0 0;  236 0 0;  239 0 0;  242 0 0;  245 0 0;  247 0 0;  250 1 0;  252 2 0;  255 3 0;  255 6 0;  255 9 0;  255 12 0;  255 16 0;  255 19 0;  255 22 0;  255 25 0;  255 29 0;  255 32 0;  255 35 0;  255 38 0;  255 42 0;  255 45 0;  255 48 0;  255 51 0;  255 55 0;  255 58 0;  255 61 0;  255 64 0;  255 68 0;  255 71 0;  255 74 0;  255 77 0;  255 81 0;  255 84 0;  255 87 0;  255 90 0;  255 94 0;  255 97 0;  255 100 0;  255 103 0;  255 106 0;  255 109 0;  255 112 0;  255 115 0;  255 119 0;  255 122 0;  255 126 0;  255 129 0;  255 133 0;  255 136 0;  255 139 0;  255 142 0;  255 145 0;  255 148 0;  255 151 0;  255 154 0;  255 158 0;  255 161 0;  255 164 0;  255 167 0;  255 171 0;  255 174 0;  255 177 0;  255 180 0;  255 184 0;  255 187 0;  255 190 0;  255 193 0;  255 197 0;  255 200 0;  255 203 0;  255 206 0;  255 209 0;  255 212 0;  255 216 0;  255 219 0;  255 223 0;  255 226 0;  255 229 0;  255 232 0;  255 236 0;  255 239 0;  255 242 0;  255 245 0;  255 249 0;  255 250 1;  255 252 3;  255 253 4;  255 255 6;  255 255 9;  255 255 12;  255 255 15;  255 255 19;  255 255 22;  255 255 25;  255 255 28;  255 255 32;  255 255 35;  255 255 38;  255 255 41;  255 255 45;  255 255 48;  255 255 51;  255 255 54;  255 255 58;  255 255 61;  255 255 64;  255 255 67;  255 255 71;  255 255 74;  255 255 77;  255 255 80;  255 255 84;  255 255 87;  255 255 90;  255 255 93;  255 255 97;  255 255 100;  255 255 103;  255 255 106;  255 255 110;  255 255 113;  255 255 116;  255 255 119;  255 255 122;  255 255 125;  255 255 128;  255 255 131;  255 255 135;  255 255 138;  255 255 142;  255 255 145;  255 255 149;  255 255 152;  255 255 155;  255 255 158;  255 255 161;  255 255 164;  255 255 167;  255 255 170;  255 255 174;  255 255 177;  255 255 180;  255 255 183;  255 255 187;  255 255 190;  255 255 193;  255 255 196;  255 255 200;  255 255 203;  255 255 206;  255 255 209;  255 255 213;  255 255 216;  255 255 219;  255 255 222;  255 255 225;  255 255 228;  255 255 232;  255 255 235;  255 255 239;  255 255 242;  255 255 245;  255 255 248;  255 255 252;  255 255 252;  255 255 253;  255 255 254;  255 255 255;  255 255 255;  255 255 255;  255 255 255;  255 255 255;  255 255 255;  255 255 255;  255 255 255; ] ./ 255;
end

function cmap = lutGreenHot()
    cmap = [ 0 0 0; 0 0 0; 0 0 0; 0 0 0; 1 1 1; 1 1 1; 1 1 1; 1 1 1; 1 1 1; 0 4 0; 0 7 0; 0 10 0; 0 13 0; 0 16 0; 0 20 0; 0 23 0; 0 27 0; 0 30 0; 0 33 0; 0 36 0; 0 39 0; 0 42 0; 0 45 0; 0 48 0; 0 52 0; 0 55 0; 0 58 0; 0 61 0; 0 65 0; 0 68 0; 0 71 0; 0 74 0; 0 78 0; 0 81 0; 0 84 0; 0 87 0; 0 90 0; 0 93 0; 0 96 0; 0 99 0; 0 103 0; 0 106 0; 0 110 0; 0 113 0; 0 117 0; 0 120 0; 0 123 0; 0 126 0; 0 130 0; 0 133 0; 0 136 0; 0 139 0; 0 142 0; 0 145 0; 0 148 0; 0 151 0; 0 155 0; 0 158 0; 0 161 0; 0 164 0; 0 168 0; 0 171 0; 0 174 0; 0 177 0; 0 181 0; 0 184 0; 0 187 0; 0 190 0; 0 193 0; 0 196 0; 0 200 0; 0 203 0; 0 207 0; 0 210 0; 0 213 0; 0 216 0; 0 220 0; 0 223 0; 0 226 0; 0 229 0; 0 233 0; 0 236 0; 0 239 0; 0 242 0; 0 245 0; 0 247 0; 0 250 1; 0 252 2; 0 255 3; 0 255 6; 0 255 9; 0 255 12; 0 255 16; 0 255 19; 0 255 22; 0 255 25; 0 255 29; 0 255 32; 0 255 35; 0 255 38; 0 255 42; 0 255 45; 0 255 48; 0 255 51; 0 255 55; 0 255 58; 0 255 61; 0 255 64; 0 255 68; 0 255 71; 0 255 74; 0 255 77; 0 255 81; 0 255 84; 0 255 87; 0 255 90; 0 255 94; 0 255 97; 0 255 100; 0 255 103; 0 255 106; 0 255 109; 0 255 112; 0 255 115; 0 255 119; 0 255 122; 0 255 126; 0 255 129; 0 255 133; 0 255 136; 0 255 139; 0 255 142; 0 255 145; 0 255 148; 0 255 151; 0 255 154; 0 255 158; 0 255 161; 0 255 164; 0 255 167; 0 255 171; 0 255 174; 0 255 177; 0 255 180; 0 255 184; 0 255 187; 0 255 190; 0 255 193; 0 255 197; 0 255 200; 0 255 203; 0 255 206; 0 255 209; 0 255 212; 0 255 216; 0 255 219; 0 255 223; 0 255 226; 0 255 229; 0 255 232; 0 255 236; 0 255 239; 0 255 242; 0 255 245; 0 255 249; 1 255 250; 3 255 252; 4 255 253; 6 255 255; 9 255 255; 12 255 255; 15 255 255; 19 255 255; 22 255 255; 25 255 255; 28 255 255; 32 255 255; 35 255 255; 38 255 255; 41 255 255; 45 255 255; 48 255 255; 51 255 255; 54 255 255; 58 255 255; 61 255 255; 64 255 255; 67 255 255; 71 255 255; 74 255 255; 77 255 255; 80 255 255; 84 255 255; 87 255 255; 90 255 255; 93 255 255; 97 255 255; 100 255 255; 103 255 255; 106 255 255; 110 255 255; 113 255 255; 116 255 255; 119 255 255; 122 255 255; 125 255 255; 128 255 255; 131 255 255; 135 255 255; 138 255 255; 142 255 255; 145 255 255; 149 255 255; 152 255 255; 155 255 255; 158 255 255; 161 255 255; 164 255 255; 167 255 255; 170 255 255; 174 255 255; 177 255 255; 180 255 255; 183 255 255; 187 255 255; 190 255 255; 193 255 255; 196 255 255; 200 255 255; 203 255 255; 206 255 255; 209 255 255; 213 255 255; 216 255 255; 219 255 255; 222 255 255; 225 255 255; 228 255 255; 232 255 255; 235 255 255; 239 255 255; 242 255 255; 245 255 255; 248 255 255; 252 255 255; 252 255 255; 253 255 255; 254 255 255; 255 255 255; 255 255 255; 255 255 255; 255 255 255; 255 255 255; 255 255 255; 255 255 255; 255 255 255; ] ./ 255;
end

function cmap = lutInferno()
    cmap = [    0    0    3;   0    0    4;   0    0    6;   1    0    7;   1    1    9;   1    1   11;   2    1   14;   2    2   16;   3    2   18;   4    3   20;   4    3   22;   5    4   24;   6    4   27;   7    5   29;   8    6   31;   9    6   33;  10    7   35;  11    7   38;  13    8   40;  14    8   42;  15    9   45;  16    9   47;  18   10   50;  19   10   52;  20   11   54;  22   11   57;  23   11   59;  25   11   62;  26   11   64;  28   12   67;  29   12   69;  31   12   71;  32   12   74;  34   11   76;  36   11   78;  38   11   80;  39   11   82;  41   11   84;  43   10   86;  45   10   88;  46   10   90;  48   10   92;  50    9   93;  52    9   95;  53    9   96;  55    9   97;  57    9   98;  59    9  100;  60    9  101;  62    9  102;  64    9  102;  65    9  103;  67   10  104;  69   10  105;  70   10  105;  72   11  106;  74   11  106;  75   12  107;  77   12  107;  79   13  108;  80   13  108;  82   14  108;  83   14  109;  85   15  109;  87   15  109;  88   16  109;  90   17  109;  91   17  110;  93   18  110;  95   18  110;  96   19  110;  98   20  110;  99   20  110; 101   21  110; 102   21  110; 104   22  110; 106   23  110; 107   23  110; 109   24  110; 110   24  110; 112   25  110; 114   25  109; 115   26  109; 117   27  109; 118   27  109; 120   28  109; 122   28  109; 123   29  108; 125   29  108; 126   30  108; 128   31  107; 129   31  107; 131   32  107; 133   32  106; 134   33  106; 136   33  106; 137   34  105; 139   34  105; 141   35  105; 142   36  104; 144   36  104; 145   37  103; 147   37  103; 149   38  102; 150   38  102; 152   39  101; 153   40  100; 155   40  100; 156   41   99; 158   41   99; 160   42   98; 161   43   97; 163   43   97; 164   44   96; 166   44   95; 167   45   95; 169   46   94; 171   46   93; 172   47   92; 174   48   91; 175   49   91; 177   49   90; 178   50   89; 180   51   88; 181   51   87; 183   52   86; 184   53   86; 186   54   85; 187   55   84; 189   55   83; 190   56   82; 191   57   81; 193   58   80; 194   59   79; 196   60   78; 197   61   77; 199   62   76; 200   62   75; 201   63   74; 203   64   73; 204   65   72; 205   66   71; 207   68   70; 208   69   68; 209   70   67; 210   71   66; 212   72   65; 213   73   64; 214   74   63; 215   75   62; 217   77   61; 218   78   59; 219   79   58; 220   80   57; 221   82   56; 222   83   55; 223   84   54; 224   86   52; 226   87   51; 227   88   50; 228   90   49; 229   91   48; 230   92   46; 230   94   45; 231   95   44; 232   97   43; 233   98   42; 234  100   40; 235  101   39; 236  103   38; 237  104   37; 237  106   35; 238  108   34; 239  109   33; 240  111   31; 240  112   30; 241  114   29; 242  116   28; 242  117   26; 243  119   25; 243  121   24; 244  122   22; 245  124   21; 245  126   20; 246  128   18; 246  129   17; 247  131   16; 247  133   14; 248  135   13; 248  136   12; 248  138   11; 249  140    9; 249  142    8; 249  144    8; 250  145    7; 250  147    6; 250  149    6; 250  151    6; 251  153    6; 251  155    6; 251  157    6; 251  158    7; 251  160    7; 251  162    8; 251  164   10; 251  166   11; 251  168   13; 251  170   14; 251  172   16; 251  174   18; 251  176   20; 251  177   22; 251  179   24; 251  181   26; 251  183   28; 251  185   30; 250  187   33; 250  189   35; 250  191   37; 250  193   40; 249  195   42; 249  197   44; 249  199   47; 248  201   49; 248  203   52; 248  205   55; 247  207   58; 247  209   60; 246  211   63; 246  213   66; 245  215   69; 245  217   72; 244  219   75; 244  220   79; 243  222   82; 243  224   86; 243  226   89; 242  228   93; 242  230   96; 241  232  100; 241  233  104; 241  235  108; 241  237  112; 241  238  116; 241  240  121; 241  242  125; 242  243  129; 242  244  133; 243  246  137; 244  247  141; 245  248  145; 246  250  149; 247  251  153; 249  252  157; 250  253  160; 252  254  164 ] ./ 255;
end

function cmap = lutViridis()
    cmap = [ 68 1 84; 68 2 85; 68 3 87; 69 5 88; 69 6 90; 69 8 91; 70 9 92; 70 11 94; 70 12 95; 70 14 97; 71 15 98; 71 17 99; 71 18 101; 71 20 102; 71 21 103; 71 22 105; 71 24 106; 72 25 107; 72 26 108; 72 28 110; 72 29 111; 72 30 112; 72 32 113; 72 33 114; 72 34 115; 72 35 116; 71 37 117; 71 38 118; 71 39 119; 71 40 120; 71 42 121; 71 43 122; 71 44 123; 70 45 124; 70 47 124; 70 48 125; 70 49 126; 69 50 127; 69 52 127; 69 53 128; 69 54 129; 68 55 129; 68 57 130; 67 58 131; 67 59 131; 67 60 132; 66 61 132; 66 62 133; 66 64 133; 65 65 134; 65 66 134; 64 67 135; 64 68 135; 63 69 135; 63 71 136; 62 72 136; 62 73 137; 61 74 137; 61 75 137; 61 76 137; 60 77 138; 60 78 138; 59 80 138; 59 81 138; 58 82 139; 58 83 139; 57 84 139; 57 85 139; 56 86 139; 56 87 140; 55 88 140; 55 89 140; 54 90 140; 54 91 140; 53 92 140; 53 93 140; 52 94 141; 52 95 141; 51 96 141; 51 97 141; 50 98 141; 50 99 141; 49 100 141; 49 101 141; 49 102 141; 48 103 141; 48 104 141; 47 105 141; 47 106 141; 46 107 142; 46 108 142; 46 109 142; 45 110 142; 45 111 142; 44 112 142; 44 113 142; 44 114 142; 43 115 142; 43 116 142; 42 117 142; 42 118 142; 42 119 142; 41 120 142; 41 121 142; 40 122 142; 40 122 142; 40 123 142; 39 124 142; 39 125 142; 39 126 142; 38 127 142; 38 128 142; 38 129 142; 37 130 142; 37 131 141; 36 132 141; 36 133 141; 36 134 141; 35 135 141; 35 136 141; 35 137 141; 34 137 141; 34 138 141; 34 139 141; 33 140 141; 33 141 140; 33 142 140; 32 143 140; 32 144 140; 32 145 140; 31 146 140; 31 147 139; 31 148 139; 31 149 139; 31 150 139; 30 151 138; 30 152 138; 30 153 138; 30 153 138; 30 154 137; 30 155 137; 30 156 137; 30 157 136; 30 158 136; 30 159 136; 30 160 135; 31 161 135; 31 162 134; 31 163 134; 32 164 133; 32 165 133; 33 166 133; 33 167 132; 34 167 132; 35 168 131; 35 169 130; 36 170 130; 37 171 129; 38 172 129; 39 173 128; 40 174 127; 41 175 127; 42 176 126; 43 177 125; 44 177 125; 46 178 124; 47 179 123; 48 180 122; 50 181 122; 51 182 121; 53 183 120; 54 184 119; 56 185 118; 57 185 118; 59 186 117; 61 187 116; 62 188 115; 64 189 114; 66 190 113; 68 190 112; 69 191 111; 71 192 110; 73 193 109; 75 194 108; 77 194 107; 79 195 105; 81 196 104; 83 197 103; 85 198 102; 87 198 101; 89 199 100; 91 200 98; 94 201 97; 96 201 96; 98 202 95; 100 203 93; 103 204 92; 105 204 91; 107 205 89; 109 206 88; 112 206 86; 114 207 85; 116 208 84; 119 208 82; 121 209 81; 124 210 79; 126 210 78; 129 211 76; 131 211 75; 134 212 73; 136 213 71; 139 213 70; 141 214 68; 144 214 67; 146 215 65; 149 215 63; 151 216 62; 154 216 60; 157 217 58; 159 217 56; 162 218 55; 165 218 53; 167 219 51; 170 219 50; 173 220 48; 175 220 46; 178 221 44; 181 221 43; 183 221 41; 186 222 39; 189 222 38; 191 223 36; 194 223 34; 197 223 33; 199 224 31; 202 224 30; 205 224 29; 207 225 28; 210 225 27; 212 225 26; 215 226 25; 218 226 24; 220 226 24; 223 227 24; 225 227 24; 228 227 24; 231 228 25; 233 228 25; 236 228 26; 238 229 27; 241 229 28; 243 229 30; 246 230 31; 248 230 33; 250 230 34; 253 231 36; ] ./ 255;
end
